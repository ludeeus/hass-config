{#- Template file for https://github.com/custom-components/readme -#}
# Welcome ðŸ‘‹!

This is my Home Assistant installation.

## Some statistics about my installation:

Description | value
--|--
Installed version | {{ states('sensor.current_version') }}
Total entity objects | {{ states | count }}
{%- set data = namespace(domains=[]) %}
{%- for state in states %}
{%- if state.domain not in data.domains %}
{%- set data.domains = data.domains + [state.domain] %}
{%- endif %}
{%- endfor %}
{%- for domain in data.domains %}
Entities in the [`{{domain}}`](https://www.home-assistant.io/components/{{domain}}) domain | {{states[domain] | count }}
{%- endfor %}

{%- set core_integrations = [
    {
        "key": "adguard",
        "name": "AdGuard Home",
    },
    {
        "key": "automation",
        "name": "Automations",
        "configuration": "./automations.yaml"
    },
    {
        "key": "wemo",
        "name": "Belkin WeMo",
    },
    {
        "key": "cast",
        "name": "Cast",
    },
    {
        "key": "cloud",
        "name": "Cloud",
        "configuration": "./packages/integrations/core/cloud.yaml"
    },
    {
        "key": "cloudflare",
        "name": "Cloudflare",
    },
    {
        "key": "default_config",
        "name": "Default Config",
        "configuration": "./configuration.yaml"
    },
    {
        "key": "frontend",
        "name": "Frontend",
        "configuration": "./packages/integrations/core/frontend.yaml"
    },
    {
        "key": "github",
        "name": "GitHub",
        "configuration": "./packages/integrations/core/github.yaml"
    },
    {
        "key": "influxdb",
        "name": "InfluxDB",
        "configuration": "./packages/integrations/core/influxdb.yaml"
    },
    {
        "key": "launch_library",
        "name": "Launch Library",
        "configuration": "./packages/integrations/core/launch_library.yaml"
    },
    {
        "key": "logger",
        "name": "Logger",
        "configuration": "./packages/integrations/core/logger.yaml"
    },
    {
        "key": "met",
        "name": "Met.no",
    },
    {
        "key": "mobile_app",
        "name": "Mobile App",
    },
    {
        "key": "netatmo",
        "name": "Netatmo",
    },
    {
        "key": "plex",
        "name": "Plex",
    },
    {
        "key": "rest_command",
        "name": "RESTful Command",
        "configuration": "./packages/integrations/core/rest_command.yaml"
    },
        {
        "key": "rest",
        "name": "Rest",
        "configuration": "./packages/integrations/core/rest.yaml"
    },
    {
        "key": "script",
        "name": "Script",
        "configuration": "./scripts.yaml"
    },
    {
        "key": "sentry",
        "name": "Sentry",
    },
    {
        "key": "spotify",
        "name": "Spotify",
        "configuration": "./packages/integrations/core/spotify.yaml"
    },
    {
        "key": "hassio",
        "name": "Supervisor",
    },
    {
        "key": "synology_dsm",
        "name": "Synology",
    },
    {
        "key": "tautulli",
        "name": "Tautulli",
        "configuration": "./packages/integrations/core/tautulli.yaml"
    },
    {
        "key": "telegram",
        "name": "Telegram BOT",
        "configuration": "./packages/integrations/core/telegram.yaml"
    },
    {
        "key": "template",
        "name": "Template",
        "configuration": "./packages/integrations/core/template.yaml"
    },
    {
        "key": "tuya",
        "name": "Tuya",
    },
    {
        "key": "uptimerobot",
        "name": "Uptime Robot",
    },
    {
        "key": "version",
        "name": "Version",
        "configuration": "./packages/integrations/core/version.yaml"
    },
] %}

## Core integrations that I use

Integration | Configuration
--|--
{% for integration in core_integrations -%}
[<img src="https://brands.home-assistant.io/_/{{integration.key}}/icon.png" height="24"/>](https://brands.home-assistant.io/_/{{integration.key}}/icon.png) [{{integration.name}}](https://home-assistant.io/integrations/{{integration.key}}) | {{"[" + integration.configuration + "](" + integration.configuration + ")" if integration.configuration else "Config flow[^1]"}}
{% endfor -%}

{%- set custom_categories = [
    {
        "key": "integration",
        "name": "integrations"
    },
    {
        "key": "plugin",
        "name": "lovelace plugins"
    },
    {
        "key": "theme",
        "name": "themes"
    }
] %}

{% for category in custom_categories -%}
{%- set entries = hacs_components | selectattr("category", "eq", category.key) | selectattr("installed", "eq", True) | list -%}
{% if entries | count != 0 %}
## The custom {{category.name}} that I use
{% for entry in entries -%}
{% if entry.installed %}
### [<img src="https://brands.home-assistant.io/_/{{entry.domain}}/icon.png" height="24"/>](https://brands.home-assistant.io/_/{{entry.domain}}/icon.png) [{{entry.name}}]({{entry.documentation}})

_{{entry.description}}_

{% if category.key == "integration" and not entry.config_flow %}
[**My configuration for {{entry.name}}**](./packages/integrations/custom/{{entry.domain}}.yaml)
{% endif -%}

**Version** | {{entry.installed_version}}
--|--
{% if entry.authors -%}
**Author(s)** | {{entry.authors|join(", ")}}
{% endif -%}
{% endif -%}
{%- endfor -%}
{% endif -%}
{%- endfor %}

***

Like all other Home Assistant instances this is also a Work in Progress :D

<!-- Footnotes -->
[^1]: UI Configuration